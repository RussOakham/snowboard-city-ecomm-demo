// Generated by ts-to-zod
import { z } from 'zod'

import { imageSchema, moneySchema, seoSchema } from './shopify.schema'

export const productOptionSchema = z.object({
	id: z.string(),
	name: z.string(),
	values: z.array(z.string()),
})

const connectionSchema = z.any()

export const shopifyProductSchema = z.object({
	id: z.string(),
	handle: z.string(),
	availableForSale: z.boolean(),
	title: z.string(),
	description: z.string(),
	descriptionHtml: z.string(),
	options: z.array(productOptionSchema),
	priceRange: z.object({
		maxVariantPrice: moneySchema,
		minVariantPrice: moneySchema,
	}),
	variants: connectionSchema,
	featuredImage: imageSchema,
	images: connectionSchema,
	seo: seoSchema,
	tags: z.array(z.string()),
	updatedAt: z.string(),
})

export const productVariantSchema = z.object({
	id: z.string(),
	title: z.string(),
	availableForSale: z.boolean(),
	selectedOptions: z.array(
		z.object({
			name: z.string(),
			value: z.string(),
		}),
	),
	price: moneySchema,
})

export const shopifyCollectionProductsOperationSchema = z.object({
	data: z.object({
		collection: z.object({
			products: connectionSchema,
		}),
	}),
	variables: z.object({
		handle: z.string(),
		reverse: z.boolean().optional(),
		sortKey: z.string().optional(),
	}),
})

export const shopifyProductRecommendationsOperationSchema = z.object({
	data: z.object({
		productRecommendations: z.array(shopifyProductSchema),
	}),
	variables: z.object({
		productId: z.string(),
	}),
})

export const shopifyProductsOperationSchema = z.object({
	data: z.object({
		products: connectionSchema,
	}),
	variables: z.object({
		query: z.string().optional(),
		reverse: z.boolean().optional(),
		sortKey: z.string().optional(),
	}),
})

export const productSchema = shopifyProductSchema
	.omit({ variants: true, images: true })
	.and(
		z.object({
			variants: z.array(productVariantSchema),
			images: z.array(imageSchema),
		}),
	)
